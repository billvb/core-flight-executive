/**  
  \page cfeappdevguide cFE Application Developer's Guide
  <UL>
     <LI> \subpage cfeadgintro <BR>
     <UL>
        <LI> \ref cfeadgscope <BR>
        <LI> \ref cfeadgbackground <BR>
        <LI> \ref cfeadgappdocs <BR>
        <LI> \ref cfeadgacronyms <BR>
        <LI> \ref cfeadgglossary <BR>
     </UL> 
     <LI> \subpage cfeadgdevenv <BR>
     <UL>
        <LI> \ref cfeadgdirtree <BR>
        <LI> \ref cfeadghdrfiles <BR>
     </UL> 
     <LI> \subpage cfeadgdepenv <BR>
     <LI> \subpage cfeadgapparch <BR>
     <LI> \subpage cfeadges <BR>
     <LI> \subpage cfeadgsb <BR>
     <LI> \subpage cfeadgevs <BR>
     <LI> \subpage cfeadgtbl <BR>
     <LI> \subpage cfeadgfs <BR>
     <LI> \subpage cfeadgtime <BR>
     <LI> Appendices <BR>
        <UL>
           <LI> \subpage cfeapi          <BR>
           <LI> \subpage cfe_error.h "cFE Error Code Reference" <BR>
           <LI> \subpage cfeevents       <BR>
        </UL>
  </UL>
**/

/**
  \page cfeadgintro Introduction
  
  <UL>
     <LI> \subpage cfeadgscope <BR>
     <LI> \subpage cfeadgbackground <BR>
     <LI> \subpage cfeadgappdocs <BR>
     <LI> \subpage cfeadgacronyms <BR>
     <LI> \subpage cfeadgglossary <BR>
  </UL> 
**/

/**
  \page cfeadgscope Scope

  The purpose of this document is to provide guidelines and conventions 
  for flight code development using the Core Flight Executive (cFE) 
  Application Programming Interface (API).  These interfaces apply to C&DH, 
  ACS and instrument control software; note that particular subsystems may 
  need to follow specific software coding guidelines and standards in 
  addition to using the functions provided within the cFE API.h

  These guidelines and conventions are specified with different weights.  
  The weighting can be determined by the use of the following words:

  -# "Shall" or "must" designates the most important weighting level and 
     are mandatory. Any deviations from these guidelines or conventions 
     must have, at a minimum, the non-compliance documented fully and, at 
     a maximum, require a project management waiver. 
  -# "Should" designates guidelines that are determined to be good coding 
     practice and are helpful for code maintenance, reuse, etc. Noncompliance 
     with should requirements does not require waivers nor additional 
     documentation but appropriate comments in the code would be useful. 
  -# "Could" designates the lowest weighting level. These could requirements 
     designate examples of an acceptable implementation but do not require 
     the developer to follow the example precisely. 

**/

/**
  \page cfeadgbackground Background

  The cFE provides a project-independent Flight Software (FSW) operational 
  environment with a set of services that are the functional building blocks 
  to create and host FSW Applications.  The cFE is composed of six core services:  
  \ref cfeadges (ES), \ref cfeadgsb (SB), \ref cfeadgevs (EVS), 
  \ref cfeadgtbl (TBL), \ref cfeadgfs (FS), and \ref cfeadgtime (TIME) (See Figure below).  
  Each cFE service defines an API that is available to the application as a 
  library of functions.

  \image html appdevguide_1.jpg

  It is important for application developers to realize the long term goal of 
  the cFE.  With a standard set of services providing a standard API, all 
  applications developed with the cFE have an opportunity to become useful on 
  future missions through code reuse.  In order to achieve this goal, 
  applications must be written with care to ensure that their code does not 
  have dependencies on specific hardware, software or compilers.  The cFE and 
  the underlying generic operating system API (OS API) have been designed to 
  insulate the cFE Application developer from hardware and software dependencies.  
  The developer, however, must make the effort to identify the proper methods 
  through the cFE and OS API to satisfy their software requirements and not 
  be tempted to take a "short-cut" and accomplish their goal with a direct 
  hardware or operating system software interface.
**/

/**
  \page cfeadgappdocs Applicable Documents
  
  <TABLE>
     <TR>
        <TD> <B> Document ID </B>
        <TD> <B> Document Title </B>
     <TR>
        <TD> http://opensource.gsfc.nasa.gov/projects/osal/osal.php
        <TD> OS Abstraction Layer Library
  </TABLE>
**/

/**
  \page cfeadgacronyms Acronyms

  <TABLE>
     <TR>
        <TD> <B> Acronym </B>
        <TD> <B> Description </B>
     <TR>
        <TD> AC
        <TD> Attitude Control
     <TR>
        <TD> ACE
        <TD> Attitude Control Electronics
     <TR>
        <TD> ACS
        <TD> Attitude Control System
     <TR>
        <TD> API
        <TD> Application Programming Interface
     <TR>
        <TD> APID
        <TD> CCSDS Application ID
     <TR>
        <TD> CCSDS
        <TD> Consultative Committee for Space Data Systems
     <TR>
        <TD> CDH, C&DH
        <TD> Command and Data Handling
     <TR>
        <TD> CM
        <TD> Configuration Management
     <TR>
        <TD> CMD
        <TD> Command
     <TR>
        <TD> CPU
        <TD> Central Processing Unit
     <TR>
        <TD> EDAC
        <TD> Error Detection and Correction
     <TR>
        <TD> EEPROM
        <TD> Electrically Erasable Programmable Read-Only Memory
     <TR>
        <TD> FC
        <TD> Function Code
     <TR>
        <TD> FDC
        <TD> Failure Detection and Correction
     <TR>
        <TD> FSW
        <TD> Flight Software
     <TR>
        <TD> HW, H/W
        <TD> Hardware
     <TR>
        <TD> ICD
        <TD> Interface Control Document
     <TR>
        <TD> MET
        <TD> Mission Elapsed Time
     <TR>
        <TD> OS
        <TD> Operating System
     <TR>
        <TD> PID
        <TD> Pipeline ID
     <TR>
        <TD> PKT
        <TD> Packet
     <TR>
        <TD> RAM
        <TD> Random-Access Memory
     <TR>
        <TD> SB
        <TD> Software Bus
     <TR>
        <TD> SDO
        <TD> Solar Dynamics Observatory
     <TR>
        <TD> ST5
        <TD> Space Technology Five
     <TR>
        <TD> STCF
        <TD> Spacecraft Time Correlation Factor
     <TR>
        <TD> SW, S/W
        <TD> Software
     <TR>
        <TD> TAI
        <TD> International Atomic Time
     <TR>
        <TD> TBD
        <TD> To Be Determined
     <TR>
        <TD> TBL
        <TD> Table
     <TR>
        <TD> TID
        <TD> Application ID
     <TR>
        <TD> TLM
        <TD> Telemetry
     <TR>
        <TD> UTC
        <TD> Coordinated Universal Time
  </TABLE>
**/

/**
  \page cfeadgglossary Glossary of Terms
  
  <TABLE>
     <TR>
        <TD> <B> Term </B>
        <TD> <B> Definition </B>
     <TR>
        <TD> \anchor cfeadg_application Application (or App)
        <TD> A set of data and functions that is treated as a single entity 
             by the cFE.  cFE resources are allocated on a per-Application 
             basis.  Applications are made up of a Main Task and zero or 
             more Child Tasks.
     <TR>
        <TD> \anchor cfeadg_applicationid Application ID
        <TD> A processor unique reference to an Application. <BR>
             <B> NOTE: This is different from a CCSDS Application ID which is 
             referred to as an "APID." </B>
     <TR>
        <TD> \anchor cfeadg_api Application Programmer's Interface (API)
        <TD> A set of routines, protocols, and tools for building software 
             applications
     <TR>
        <TD> \anchor cfeadg_bsp Board Support Package (BSP)
        <TD> A collection of user-provided facilities that interface an OS 
             and the cFE with a specific hardware platform.  The BSP is 
             responsible for hardware initialization.
     <TR>
        <TD> \anchor cfeadg_childtask Child Task
        <TD> A separate thread of execution that is spawned by an 
             Application's Main Task.
     <TR>
        <TD> \anchor cfeadg_command Command
        <TD> A Software Bus Message defined by the receiving Application. 
             Commands can originate from other onboard Applications or 
             from the ground.
     <TR>
        <TD> \anchor cfeadg_cfe Core Flight Executive (cFE)
        <TD> A runtime environment and a set of services for hosting FSW 
             Applications
     <TR>
        <TD> \anchor cfeadg_cds Critical Data Store (CDS)
        <TD> A collection of data that is not modified by the OS or 
             cFE following a Processor Reset.
     <TR>
        <TD> \anchor cfeadg_crc Cyclic Redundancy Check
        <TD> A polynomial based method for checking that a data set 
             has remained unchanged from one time period to another.
     <TR>
        <TD> \anchor cfeadg_developer Developer
        <TD> Anyone who is coding a cFE Application.
     <TR>
        <TD> \anchor cfeadg_eventdata Event Data
        <TD> Data describing an Event that is supplied to the cFE 
             Event Service. The cFE includes this data in an  
             \ref cfeadg_eventmessage "Event Message".
     <TR>
        <TD> \anchor cfeadg_eventfilter Event Filter
        <TD> A numeric value (bit mask) used to determine how 
             frequently to output an application Event Message 
             defined by its \ref cfeadg_eventid "Event ID".
     <TR>
        <TD> \anchor cfeadg_eventformatmode Event Format Mode
        <TD> Defines the Event Message Format downlink option: short or long.  
             The short format is used when there is limited telemetry bandwidth 
             and is binary.  The long format is in ASCII and is used for 
             logging to a Local Event Log and to an Event Message Port.
     <TR>
        <TD> \anchor cfeadg_eventid Event ID
        <TD> A numeric literal used to uniquely name an Application event.
     <TR>
        <TD> \anchor cfeadg_eventmessage Event Message
        <TD> A data item used to notify the user and/or an external 
             \ref cfeadg_application "Application" of a significant event. 
             Event Messages include a time-stamp of when the message was 
             generated, a processor unique identifier, an 
             \ref cfeadg_applicationid "Application ID", the
             \ref cfeadg_eventtype "Event Type" (DEBUG,INFO,ERROR or CRITICAL), 
             and \ref cfeadg_eventdata "Event Data".  An Event Message can 
             either be real-time or playback from a Local Event Log.
     <TR>
        <TD> 
        <TD> 
     <TR>
        <TD> 
        <TD> 
  </TABLE>
**/

/**
  \page cfeadgdevenv cFE Application Development Environment
  
  <UL>
     <LI> \subpage cfeadgdirtree <BR>
     <LI> \subpage cfeadghdrfiles <BR>
  </UL> 
**/

/**
  \page cfeadgdirtree Directory Tree
**/

/**
  \page cfeadghdrfiles Header Files
**/

/**
  \page cfeadgdepenv cFE Deployment Environment
  
  
**/

/**
  \page cfeadgapparch cFE Application Architecture
**/

/**
  \page cfeadges Executive Services
**/

/**
  \page cfeadgsb Software Bus
**/

/**
  \page cfeadgevs Event Services
**/

/**
  \page cfeadgtbl Table Services
**/

/**
  \page cfeadgfs File Services
**/

/**
  \page cfeadgtime Time Services
**/

/**
  \page cfeapi cFE Application Programmer's Interface (API) Reference 
  <H4> Executive Services API </H4>
  <UL>
    <LI> cFE Entry/Exit APIs
    <UL>
      <LI> #CFE_ES_Main - cFE Main Entry Point used by Board Support Package to start cFE
      <LI> #CFE_ES_ResetCFE - Reset the cFE Core and all cFE Applications
    </UL>
    <LI> Application Control APIs
    <UL>
      <LI> #CFE_ES_RestartApp - Restart a single cFE Application
      <LI> #CFE_ES_ReloadApp - Reload a single cFE Application
      <LI> #CFE_ES_DeleteApp - Delete a single cFE Application
    </UL>
    <LI> Required Application APIs
    <UL>
      <LI> #CFE_ES_RegisterApp - Registers a cFE Application with Executive Services
      <LI> #CFE_ES_RunLoop - Checks for Exit, Restart or Reload commands
      <LI> #CFE_ES_WaitForStartupSync - Waits for all Apps in Startup Script to complete initialization
      <LI> #CFE_ES_IncrementTaskCounter - Increments telemetered task counter to indicate task activity
      <LI> #CFE_ES_ExitApp - Exit for a cFE Application
    </UL>
    <LI> Information APIs
    <UL>
      <LI> #CFE_ES_GetResetType - Returns the most recent type of reset
      <LI> #CFE_ES_GetAppID - Returns the Application ID of calling Application
      <LI> #CFE_ES_GetAppIDByName - Returns the Application ID of an Application specified by name
      <LI> #CFE_ES_GetAppName - Returns the name of an Application specified by Application ID
      <LI> #CFE_ES_GetAppInfo - Returns Application info about an Application specified by Application ID
      <LI> #CFE_ES_GetTaskInfo - Returns the task information about a task specified by task ID
    </UL>
    <LI> Child Task APIs
    <UL>
      <LI> #CFE_ES_RegisterChildTask - Registers a cFE Child Task with Executive Services
      <LI> #CFE_ES_CreateChildTask - Creates a new task under an existing Application
      <LI> #CFE_ES_DeleteChildTask - Deletes a task under an existing Application
      <LI> #CFE_ES_ExitChildTask - Exit for a cFE Child Task
    </UL>
    <LI> Driver APIs
    <UL>
      <LI> #CFE_ES_RegisterDriver - Registers a Device Driver for a specified device
      <LI> #CFE_ES_UnloadDriver - Removes a Device Driver for a specified device
    </UL>
    <LI> Critical Data Store APIs
    <UL>
      <LI> #CFE_ES_RegisterCDS - Reserves space (or obtains previously reserved space)in the Critical Data Store
      <LI> #CFE_ES_CopyToCDS - Copies a block of memory into a Critical Data Store
      <LI> #CFE_ES_RestoreFromCDS - Recovers the contents of memory from a Critical Data Store
    </UL>
    <LI> Memory Manager APIs
    <UL>
      <LI> #CFE_ES_PoolCreate - Initializes a Memory Pool created by an Application
      <LI> #CFE_ES_PoolCreateEx - Initializes a Memory Pool created by an Application with Application specified block sizes
      <LI> #CFE_ES_GetPoolBuf - Gets a buffer from a Memory Pool
      <LI> #CFE_ES_PutPoolBuf - Releases a buffer to a Memory Pool
      <LI> #CFE_ES_GetMemPoolStats - Extracts statistics maintained by the memory pool software
    </UL>
    <LI> Performance Monitoring APIs
    <UL>
      <LI> #CFE_ES_PerfLogEntry - Marks the entry into a performance analyzer segment of code
      <LI> #CFE_ES_PerfLogExit - Marks the exit from a performance analyzer segment of code
      <LI> #CFE_ES_PerfLogAdd - Adds a mark into the Performance Log
    </UL>
    <LI> Miscellaneous APIs
    <UL>
      <LI> #CFE_ES_CalculateCRC -  Calculates a CRC on a block of memory
      <LI> #CFE_ES_WriteToSysLog - Writes a debug message to the System Log
    </UL>
  </UL>

  <H4> Events Services API </H4>
  <UL>
    <LI> Registration APIs
    <UL>
      <LI> #CFE_EVS_Register - Register an Application for using Event Services
      <LI> #CFE_EVS_Unregister - Unregister an Application from using Event Services
    </UL>
    <LI> Send Event APIs
    <UL>
      <LI> #CFE_EVS_SendEvent - Generate a Software Event
      <LI> #CFE_EVS_SendEventWithAppID - Generate a Software Event as though produced by the specified Application
      <LI> #CFE_EVS_SendTimedEvent - Generate a Software Event with a specified time tag
    </UL>
    <LI> Reset Event Filter APIs
    <UL>
      <LI> #CFE_EVS_ResetFilter - Resets the calling Application's Event Filter for a specified event
      <LI> #CFE_EVS_ResetAllFilters - Resets all of the calling Application's Event Filters
    </UL>
  </UL>

  <H4> File Services API </H4>
  <UL>
    <LI> cFE File Header Management APIs
    <UL>
	  <LI> #CFE_FS_ReadHeader - Read the contents of the Standard cFE File Header
	  <LI> #CFE_FS_WriteHeader - Write the contents of the Standard cFE File Header
	  <LI> #CFE_FS_SetTimestamp - Modify the Time Stamp field in the Standard cFE File Header
    </UL>
    <LI> Compressed File Management APIs
    <UL>
	  <LI> #CFE_FS_IsGzFile - Determines if specified file is a gzip/compressed file
	  <LI> #CFE_FS_Decompress - Decompresses the specified file to a destination file
    </UL>
    <LI> Filename Utility APIs
    <UL>
	  <LI> #CFE_FS_ExtractFilenameFromPath - Extracts the filename from a unix style path
    </UL>
  </UL>

  <H4> Software Bus API </H4>
  <UL>
    <LI> Pipe Creation/Deletion APIs
    <UL>
      <LI> #CFE_SB_CreatePipe - Creates a new software bus pipe
      <LI> #CFE_SB_DeletePipe - Deletes a software bus pipe
    </UL>
    <LI> Message Subscription Control APIs
    <UL>
      <LI> #CFE_SB_Subscribe - Subscribe to a message on the software bus with default parameters
      <LI> #CFE_SB_SubscribeEx - Subscribe to a message on the software bus
      <LI> #CFE_SB_SubscribeLocal - Subscribe to a message while keeping the request on the current CPU
      <LI> #CFE_SB_Unsubscribe - Remove a subscription to a message on the software bus
      <LI> #CFE_SB_UnsubscribeLocal - Remove a subscription to a message on the software bus on the current CPU
    </UL>
    <LI> Send/Receive Message APIs
    <UL>
      <LI> #CFE_SB_SendMsg - Send a software bus message
      <LI> #CFE_SB_RcvMsg - Receive a software bus message
      <LI> #CFE_SB_ZeroCopySend - Send a software bus message in "zero copy" mode
    </UL>
    <LI> Zero Copy Message APIs
    <UL>
      <LI> #CFE_SB_ZeroCopyGetPtr - Get a buffer pointer to use for "zero copy" mode
      <LI> #CFE_SB_ZeroCopyReleasePtr - Release an unused "zero copy" mode buffer pointer
      <LI> #CFE_SB_ZeroCopySend - Send a software bus message in "zero copy" mode
    </UL>
    <LI> Setting Message Characteristics APIs
    <UL>
      <LI> #CFE_SB_InitMsg - Initialize a buffer for a software bus message
      <LI> #CFE_SB_SetMsgId - Sets the message ID of a software bus message
      <LI> #CFE_SB_SetUserDataLength - Sets the length of the user data segment of a software bus message
      <LI> #CFE_SB_SetTotalMsgLength - Sets the length of a software bus message
      <LI> #CFE_SB_SetMsgTime - Sets the time field in a software bus message
      <LI> #CFE_SB_TimeStampMsg - Sets the time field in a software bus message with the current spacecraft time
      <LI> #CFE_SB_SetCmdCode - Sets the command code field in a software bus message
      <LI> #CFE_SB_GenerateChecksum - Computes and sets the checksum field in a software bus message
    </UL>
    <LI> Getting Message Characteristics APIs
    <UL>
      <LI> #CFE_SB_MsgHdrSize - Gets the size of a software bus message header
      <LI> #CFE_SB_GetUserData - Gets a pointer to the first byte of the user data segment in a software bus message
      <LI> #CFE_SB_GetMsgId - Gets the current message ID in a software bus message
      <LI> #CFE_SB_GetUserDataLength - Gets the size of the user data segment of a software bus message
      <LI> #CFE_SB_GetTotalMsgLength - Gets the total size of the software bus message
      <LI> #CFE_SB_GetMsgTime - Gets the time field from a software bus message
      <LI> #CFE_SB_GetCmdCode - Gets the command code field from a software bus message
      <LI> #CFE_SB_GetChecksum - Gets the checksum field from a software bus message
    </UL>
    <LI> Checksum Control APIs
    <UL>
      <LI> #CFE_SB_GenerateChecksum - Computes and sets the checksum field in a software bus message
      <LI> #CFE_SB_GetChecksum - Gets the checksum field from a software bus message
      <LI> #CFE_SB_ValidateChecksum - Validates the checksum of a software bus message
    </UL>
  </UL>

  <H4> Table Services API </H4>
  <UL>
    <LI> Registration APIs
    <UL>
      <LI> #CFE_TBL_Register - Register a table with cFE to obtain Table Management Services
      <LI> #CFE_TBL_Share - Obtain access to a table registered by another Application
      <LI> #CFE_TBL_Unregister - Unregister a previously registered table and free resources
    </UL>
    <LI> Manage Table Content APIs
    <UL>
      <LI> #CFE_TBL_Load - Load a specified table with data
      <LI> #CFE_TBL_Update - Update the contents of a table with any pending data
      <LI> #CFE_TBL_Validate - Validate the contents of a table
      <LI> #CFE_TBL_Manage - Perform standard routine operations to maintain a table
      <LI> #CFE_TBL_DumpToBuffer - Copies contents of a Dump Only Table to a shared buffer
      <LI> #CFE_TBL_Modified - Notifies Table Services that table contents have been modified by Application
    </UL>
    <LI> Access Table Content APIs
    <UL>
      <LI> #CFE_TBL_GetAddress - Obtain the current address of the contents of a table
      <LI> #CFE_TBL_GetAddresses - Obtain the current addresses of multiple tables
      <LI> #CFE_TBL_ReleaseAddress - Release the pointer to the contents of a table
      <LI> #CFE_TBL_ReleaseAddresses - Release the pointers to the contents of multiple tables
    </UL>
    <LI> Get Table Information APIs
    <UL>
      <LI> #CFE_TBL_GetStatus - Obtain current status of pending actions for a table
      <LI> #CFE_TBL_GetInfo - Obtain characteristics/information about a specific table
    </UL>
  </UL>

  <H4> Time Services API </H4>
  <UL>
    <LI> Get Current Time APIs
    <UL>
      <LI> #CFE_TIME_GetTime - Get the current spacecraft time
      <LI> #CFE_TIME_GetTAI - Get the current TAI time
      <LI> #CFE_TIME_GetUTC - Get the current UTC time
      <LI> #CFE_TIME_GetMET - Get the current Mission Elapsed Time
      <LI> #CFE_TIME_GetMETseconds - Get the current seconds count of the Mission Elapsed Time
      <LI> #CFE_TIME_GetMETsubsecs - Get the current subseconds count of the Mission Elapsed Time
    </UL>
    <LI> Get Time Information APIs
    <UL>
      <LI> #CFE_TIME_GetSTCF - Get the current value of the Spacecraft Time Correction Factor
      <LI> #CFE_TIME_GetLeapSeconds - Get the current value of the leap seconds counter
      <LI> #CFE_TIME_GetClockState - Get the state of the spacecraft clock
      <LI> #CFE_TIME_GetClockInfo - Get information about the spacecraft clock
    </UL>
    <LI> Time Arithmetic APIs
    <UL>
      <LI> #CFE_TIME_Add - Adds two time values
      <LI> #CFE_TIME_Subtract - Subtracts two time values
      <LI> #CFE_TIME_Compare - Compares two time values
    </UL>
    <LI> Time Conversion APIs
    <UL>
      <LI> #CFE_TIME_MET2SCTime - Converts the specified MET into a Spacecraft Time
      <LI> #CFE_TIME_Sub2MicroSecs - Converts a sub-seconds count to an equivalent number of microseconds
      <LI> #CFE_TIME_Micro2SubSecs - Converts a number of microseconds into an equivalent number of MET sub-seconds
      <LI> #CFE_TIME_CFE2FSSeconds - Converts cFE seconds into the File System's seconds
      <LI> #CFE_TIME_FS2CFESeconds - Converts File System's seconds into cFE Seconds
    </UL>
    <LI> External Time Source APIs
    <UL>
      <LI> #CFE_TIME_ExternalTone - Identifies the receipt of a 1 Hz signal from an external source
      <LI> #CFE_TIME_ExternalMET - Provide a Mission Elapsed Time (MET) to the cFE from an external source 
      <LI> #CFE_TIME_ExternalGPS - Provide a time to the cFE from an external source that has common GPS data
      <LI> #CFE_TIME_ExternalTime - Provide a time to the cFE from an external source that measures time from a known epoch
      <LI> #CFE_TIME_RegisterSynchCallback - Registers an Application's callback to be called when an external tone arrives
      <LI> #CFE_TIME_UnregisterSynchCallback - Unregisters an Application's callback that is called when an external tone arrives
    </UL>
    <LI> Miscellaneous Time APIs
    <UL>
      <LI> #CFE_TIME_Print - Converts a time value to a character string
    </UL>
  </UL>
**/
